C51 COMPILER V9.55   MAIN                                                                  05/30/2016 17:19:03 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*  Name     : main.c
   2           *  Purpose  : Main file for  a demo project for the implentation of uart communication in AT89S8253 contr
             -ollers.
   3                         the project  file contains the functions to transmit and receive character and to transmit 
             -a string.
   4                         
   5           *  Author   : Etiq Technologies
   6           *  Date     : 03/05/2016 
   7           *  Revision : None
   8           */
   9          
  10          #include <REG8253.H>
  11          
  12          /* uart initialisation function */
  13          void UART_init()
  14          {
  15   1        SCON=0x50;            //configure serial control register
  16   1        PCON=0x80;            //SMOD bit set
  17   1        TMOD=0x20;           //using timer1,8-bit reload mode for baudrate generation
  18   1        TH1=0xEF;            //4800 baudrate(16 mhz clock)
  19   1        TR1=1;               //start timer
  20   1        
  21   1      //T2CON=0x30;
  22   1      //RCAP2H=0xFF;
  23   1      //RCAP2L=0xCC;  
  24   1      //TR2=1;  
  25   1      //  
  26   1        
  27   1        
  28   1      }
  29          
  30          /* function to transmit  a string in uart */
  31          
  32          void Uart_write_txt(unsigned char *ptr)
  33          {
  34   1        /*Each character in the string is transmitted 
  35   1        in aloop until the final character '\0' */
  36   1        
  37   1        while(*ptr)
  38   1        {
  39   2          SBUF=*ptr;             // character in transmit buffer
  40   2          while(!TI);            //wait until transmission complete
  41   2          TI=0;                  //clear the flag
  42   2          ptr++;
  43   2      }
  44   1        }
  45          
  46          /* function to receive a character in uart */ 
  47          unsigned char Uart_read_char()
  48          {
  49   1      unsigned char character;
  50   1      while(!RI);               //wait until character received completely
  51   1      character=SBUF;           //read the character from buffer reg
  52   1      RI=0;                     //clear the flag
C51 COMPILER V9.55   MAIN                                                                  05/30/2016 17:19:03 PAGE 2   

  53   1      return character;         //return the received character
  54   1      }
  55          
  56          /* function to transmit a character in uart */
  57          void Uart_write_char(unsigned char character)
  58          {
  59   1        SBUF=character;          //load the character to be transmitted in to the buffer reg
  60   1        while(!TI);              //wait until transmission complete
  61   1        TI=0;                    //clear flag
  62   1      }
  63          
  64           /* Main function demonstrate each operation in uart
  65              a charcter is received and transmitted        */
  66           
  67          void main()
  68          {
  69   1        unsigned char received;   
  70   1        UART_init();
  71   1        while(1)
  72   1        {
  73   2          Uart_write_txt("\r\nEnter the character from Keyboard\r\n");  //transmit the string
  74   2          received=Uart_read_char();                                    //receive character
  75   2          Uart_write_txt("You have entered ");                          //transmit string
  76   2          Uart_write_char(received);                                    //transmit the received character.
  77   2      }
  78   1      
  79   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =     56    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
